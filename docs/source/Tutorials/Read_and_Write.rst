Read and Write
==================
This section contains the introduction of reading and writing.

---------------------------------------------------------------------------------------------------------------------

File Format
-------------------------
Here is the list of input file that Stereopy could read:

:GEM: GEM file contains GeneID, x,y,count. x, y represent spatial positions of the gene in the tissue section, and count means the number of gene expression.
:BGEF: One type of GEF file. The suffix of BGEF file includes: SN.raw.gef, SN.gef, SN.tissue.gefï¼ˆ`BGEF details <https://www.processon.com/view/link/610cc49c7d9c087bbd1ab7ab#map>`_)
:CGEF: One type of GEF file. The suffix of CGEF file is cellbin.gef (`CGEF details <https://www.processon.com/view/link/6274de9c0791290711fa418d#map>`_)
:stereo h5ad: One type of h5ad file containing StereoExpData object which is generated by Stereopy.
:anndata h5ad: One type of h5ad file containing Anndata object which is generated by scanpy.

---------------------------------------------------------------------------------------------------------------------

Reading
-------------------------
GEM file
~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    # read the gem file
    mouse_data_path = './DP8400013846TR_F5.gem'
    data = st.io.read_gem(
            file_path= mouse_data_path,
            sep='\t', bin_type="bins",
            bin_size=100, is_sparse=True)

`parameters <https://stereopy.readthedocs.io/en/latest/api/stereo.io.read_gem.html#stereo.io.read_gem>`_

---------------------------------------------------------------------------------------------------------------------

GEF file
~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    # read the gef file
    mouse_data_path = './DP8400013846TR_F5.gef'
    gef_info = st.io.read_gef_info(file_path=mouse_data_path)

You could get the info from input gef file and use the info to set the parameter of :mod:`stereo.io.read_gef`


BGEF file
****************
.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    # read the gef file
    mouse_data_path = './DP8400013846TR_F5.gef'
    data = st.io.read_gef(
            file_path= mouse_data_path, sep='\t',
            bin_size=100, is_sparse=True,
            gene_list= None, region= None,)

CGEF file
****************
.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    # read the gef file
    mouse_data_path = './DP8400013846TR_F5.gef'
    data = st.io.read_gef(
            file_path= mouse_data_path, sep='\t',
            is_sparse=True,
            gene_list= None, region= None,)

`parameters <https://stereopy.readthedocs.io/en/latest/api/stereo.io.read_gef.html#stereo.io.read_gef>`_

---------------------------------------------------------------------------------------------------------------------

stereo h5ad file
~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    # read the gef file
    mouse_data_path = './DP8400013846TR_F5.st.h5ad'
    data = st.io.read_stereo_h5ad(file_path=mouse_data_path, use_raw=True, use_result=True,)

`parameters <https://stereopy.readthedocs.io/en/latest/api/stereo.io.read_stereo_h5ad.html>`_

---------------------------------------------------------------------------------------------------------------------

anndata h5ad file
~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    # read the gef file
    mouse_data_path = './DP8400013846TR_F5.anndata.h5ad'
    data = st.io.read_ann_h5ad(file_path=mouse_data_path, spatial_key=None)

`parameters <https://stereopy.readthedocs.io/en/latest/api/stereo.io.read_ann_h5ad.html>`_

---------------------------------------------------------------------------------------------------------------------

After preprocessiong and other steps, you could save results into an output file using commands.

writing
-------------------------

stereo h5ad file
~~~~~~~~~~~~~~~~~~~~~~~
.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    st.io.write_h5ad(data, use_raw=True, use_result=True, key_record=None)

GEF file
~~~~~~~~~~~~~~~~~~~~~~~

new GEF file
****************
You may use lasso tool or gene_list/region_list to cut off the data and these steps can generate new StereoExpObject,
so you could save the new data into a new GEF file.

.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    st.io.write_mid_gef(data, output)

existing GEF file
****************
After you read an input gef and clustering, you could add the clustering result(leiden/louvain...) into the input GEF file.

.. code:: python

    import warnings
    warnings.filterwarnings('ignore')
    import stereo as st

    st.io.update_gef(data, gef_file, cluster_res_key)

